// :root {
//   --color-main: red;
// }

// div {
//   color: var(--color-main);
//   width: calc(100vw - 100px);
// }
*{
  margin: 0;
}

$color-main: #fff;
$bgColor-main: #0066ff;
$bgColor-sub: rgb(27, 88, 179);
$color-accent: #ffc600;
$color-grey: #333;

.scss-parents {
  color: $color-main;
  background-color: $bgColor-main;
  font-size: 2em + 2;
  width: 100vw - 200;
}

// style 코드 블럭을 @minxin을 이용하여 함수처럼 하나로 묶고,
@mixin box-width($size) {
  width: $size;
  height: $size;
}

// 사용할 땐 @include 키워드를 이용하요 사용
.box1 {
  @include box-width(100px);
  background-color: $bgColor-sub;
}

.box2 {
  @include box-width(200px);
  background-color: $bgColor-main;
}

.scss-parents {
  ul{
    background-color: $color-accent;
    color: $color-main;
  }
  & ul:hover {
    cursor: pointer;
    color: $color-grey;
  }
}

.origin-scss {
  display: flex;
  .box {
    @include box-width(100px);
    
    &.r{
      background-color: crimson;
    }
    &.o{
      background-color: darkorange;
    }
    &.y {
      background-color: lime;
    }
    &.g {
      background-color: yellowgreen;
    }
    &.b {
      background-color: royalblue;
    }
    &.p {
      background-color: rebeccapurple;
    }
  }
}
.btn {
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  background-color: $color-accent;
}
.btn-primary {
  @extend .btn;
  background-color: $bgColor-sub;
}

// 태블릿에서는 768px
// @mixin: css에서 묶어두고 싶은 코드 블럭을 정의할 때 사용
@mixin tablet {
  @media screen and (max-width: 768px) {
    // @content: 정의할 때 @content 키워드 적은 곳 - 상용할 때, 중괄호 안에 적은 내용
    // 아래 include에 적은 내용이 content를 통해 들어옴
    @content;
  }
}

// @inclue: 정의한 @mixin을 사용할 때
@include tablet {
  .origin-scss {
    display: block;
  }
}

@import "./media";
// 핸드폰에서는 500px
